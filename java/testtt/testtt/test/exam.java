package testtt.test;

public class exam {

//
//	문제1.
//
//	 
//
//	자연수가 들어있는 배열이 매개변수로 주어질 때, 배열 안의 숫자들 중 한 번씩만 나타나는(즉, 중복되어 나타나지 않는) 숫자들만 오름차순으로 정렬하여 반환하는 프로그램을 완성해주세요.
	//만약 그러한 숫자가 없다면 배열에 –1을 채워서 반환하는 프로그램을 작성하세요.
//
//	 
//
//	[제한사항]
//
//	arr의 길이는 1 이상 10만 이하의 자연수입니다.
//
//	arr의 원소는 1 이상 10만 이하의 자연수입니다.
//
//	 
//
//	[입출력 예]
//
//	입출력 예 #1
//
//	입력: [7, 3, 2, 2]
//
//	출력: [3, 7]
//
//	 
//
//	입출력 예 #2
//
//	입력: [3, 5, 5, 2, 1, 2, 1, 1, 8]
//
//	출력: [3, 8]
//
//	 
//
//	입출력 예 #3
//
//	입력: [3, 5, 3, 5, 7, 5, 7]
//
//	출력: [-1]
//
//	■ 문제2.
//
//	 
//
//	사용자 코드는 문자열 + 번호 + 권한으로 구성됩니다. (예: Test10A)
//
//	 
//
//	- 문자열은 영문 대소문자로 구성
//
//	- 번호는 최대 5자리로 구성(0이 가장 앞에 나올 수도 있습니다.)
//
//	- 권한은 가장 마지막 문자
//
//	A(admin), M(manager), U(user) 총 3개로 구분
//
//	 
//
//	정렬 순서는 다음과 같습니다.
//
//	 
//
//	1. 권한별로 A, M, U 순서로 정렬
//
//	2. 동일한 권한 내에서 문자열을 대소문자 구분없이 사전 순으로 정렬
//
//	3. 문자열이 같으면 번호를 오름차순으로 정렬 (01과 1은 같은 값으로 처리)
//
//	4. 정렬 순서가 동일할 경우 (예: user10A, User010A) 입력된 원본 정렬 순서에 따라 출력
//
//	 
//
//	정렬한 사용자 코드를 실행 결과로 출력하는 프로그램을 작성하세요.
//
//	 
//
//	[입출력 예]
//
//	입력: user12U user10A User010A USER02U TEST01U test012M Test1M test100A
//
//	 
//
//	출력: test100A user10A User010A Test1M test012M TEST01U USER02U user12U
//
//	■ 문제3.
//
//	 
//
//	중복된 라인이 포함된 파일이 주어집니다.
//
//	 
//
//	중복된 라인의 개수를 실행 결과로 출력하고, 중복이 제거된 라인을 result.txt 파일에 쓰는 프로그램을 작성하세요.
//
//	 
//
//	[입력 예시 파일 내용]
//
//	testrow123
//
//	testrow456
//
//	testrow123 – 중복 row
//
//	testrow123 – 중복 row
//
//	testrow456 – 중복 row
//
//	testrow789
//
//	 
//
//	[실행 결과]
//
//	중복 라인 수 – 3건
//
//	 
//
//	[출력 예시 파일 내용]
//
//	testrow123
//
//	testrow456
//
//	testrow789
//
//	맨위로


}
